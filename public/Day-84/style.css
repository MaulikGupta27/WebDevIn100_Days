* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Courier New', monospace;
    background: #0a0a0a;
    color: #00ff88;
    overflow: hidden;
    position: relative;
    min-height: 100vh;
}

/* Background Effects */
.stars {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(2px 2px at 20px 30px, #fff, transparent),
                radial-gradient(2px 2px at 40px 70px, rgba(0, 255, 136, 0.5), transparent),
                radial-gradient(1px 1px at 90px 40px, #ff0080, transparent),
                radial-gradient(1px 1px at 130px 80px, #00ff88, transparent),
                radial-gradient(2px 2px at 160px 30px, #fff, transparent);
    background-repeat: repeat;
    background-size: 200px 100px;
    animation: stars 20s linear infinite;
    z-index: -1;
}

@keyframes stars {
    from { transform: translateY(0px); }
    to { transform: translateY(-100px); }
}

.glitch-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent 0%,
        rgba(255, 0, 128, 0.03) 50%,
        transparent 100%
    );
    animation: glitch-overlay 3s infinite;
    pointer-events: none;
    z-index: 1;
}

@keyframes glitch-overlay {
    0%, 100% { transform: translateX(0); opacity: 0.1; }
    25% { transform: translateX(2px); opacity: 0.3; }
    50% { transform: translateX(-2px); opacity: 0.1; }
    75% { transform: translateX(1px); opacity: 0.2; }
}

/* Screen Management */
.screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 2;
}

.screen.active {
    display: flex;
}

/* Error Screen */
#error-screen .container {
    text-align: center;
    position: relative;
    z-index: 3;
}

.glitch-text {
    position: relative;
    font-weight: bold;
    letter-spacing: 3px;
}

.glitch-text::before,
.glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch-text::before {
    animation: glitch-1 2s infinite;
    color: #ff0080;
    z-index: -1;
}

.glitch-text::after {
    animation: glitch-2 2s infinite;
    color: #00ffff;
    z-index: -2;
}

@keyframes glitch-1 {
    0%, 14%, 15%, 49%, 50%, 99%, 100% {
        transform: translate(0);
    }
    15%, 49% {
        transform: translate(-2px, 1px);
    }
    50%, 99% {
        transform: translate(1px, -1px);
    }
}

@keyframes glitch-2 {
    0%, 20%, 21%, 62%, 63%, 100% {
        transform: translate(0);
    }
    21%, 62% {
        transform: translate(2px, 1px);
    }
    63%, 100% {
        transform: translate(-1px, 2px);
    }
}

#error-screen h1 {
    font-size: 8rem;
    margin-bottom: 1rem;
    text-shadow: 0 0 20px #00ff88;
}

.error-message {
    font-size: 2rem;
    margin-bottom: 2rem;
}

.subtitle {
    font-size: 1rem;
    color: #aaa;
    margin-bottom: 3rem;
}

/* Scan Lines Effect */
.scan-lines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(0, 255, 136, 0.05) 2px,
        rgba(0, 255, 136, 0.05) 4px
    );
    animation: scan 2s linear infinite;
    pointer-events: none;
}

@keyframes scan {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
}

/* Buttons */
.neon-btn {
    background: transparent;
    border: 2px solid #00ff88;
    color: #00ff88;
    padding: 15px 30px;
    font-family: inherit;
    font-size: 1rem;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
}

.neon-btn:hover {
    background: #00ff88;
    color: #000;
    box-shadow: 0 0 20px #00ff88, inset 0 0 20px #00ff88;
}

.neon-btn.small {
    padding: 10px 20px;
    font-size: 0.9rem;
}

/* HUD */
.hud {
    position: fixed;
    top: 20px;
    left: 20px;
    right: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: rgba(0, 0, 0, 0.8);
    padding: 15px 25px;
    border: 1px solid #00ff88;
    border-radius: 5px;
}

.timer-container {
    display: flex;
    align-items: center;
    gap: 10px;
}

.timer {
    font-size: 2rem;
    color: #ff0080;
    text-shadow: 0 0 10px #ff0080;
    min-width: 60px;
}

.timer.warning {
    animation: timer-warning 1s infinite;
}

@keyframes timer-warning {
    0%, 50% { color: #ff0080; }
    25%, 75% { color: #ffff00; }
}

.progress-container {
    display: flex;
    align-items: center;
    gap: 15px;
}

.progress-bars {
    display: flex;
    gap: 10px;
}

.progress-bar {
    width: 30px;
    height: 30px;
    border: 2px solid #333;
    position: relative;
    background: #1a1a1a;
    transition: all 0.5s ease;
}

.progress-bar.completed {
    border-color: #00ff88;
    background: #00ff88;
    box-shadow: 0 0 15px #00ff88;
}

.progress-bar.completed::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #000;
    font-weight: bold;
}

/* Levels */
.level {
    display: none;
    width: 100%;
    height: 100%;
    padding: 100px 20px 20px;
}

.level.active {
    display: flex;
    align-items: center;
    justify-content: center;
}

.level-container {
    text-align: center;
    max-width: 800px;
    width: 100%;
}

.level-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #ff0080;
    text-shadow: 0 0 15px #ff0080;
}

.level-description {
    font-size: 1.2rem;
    margin-bottom: 3rem;
    color: #aaa;
}

/* Level 1: Hidden Key */
.glitch-area {
    background: #111;
    border: 1px solid #333;
    padding: 30px;
    margin: 30px 0;
    position: relative;
}

.data-stream {
    font-family: 'Courier New', monospace;
    font-size: 1.1rem;
    line-height: 1.8;
}

.data-line {
    margin: 10px 0;
    padding: 5px;
    background: rgba(0, 255, 136, 0.1);
}

.data-line.glitching {
    animation: data-glitch 2s infinite;
}

@keyframes data-glitch {
    0%, 90% { transform: translateX(0); }
    95% { transform: translateX(-2px); }
    97% { transform: translateX(2px); }
    100% { transform: translateX(0); }
}

.hidden-key {
    color: #ffff00;
    cursor: pointer;
    font-size: 1.5rem;
    animation: key-glow 2s infinite;
    user-select: none;
    transition: all 0.3s ease;
}

.hidden-key:hover {
    transform: scale(1.2);
    text-shadow: 0 0 20px #ffff00;
}

@keyframes key-glow {
    0%, 50% { opacity: 0.7; }
    25%, 75% { opacity: 1; }
}

.key-slot {
    width: 200px;
    height: 80px;
    border: 3px dashed #333;
    margin: 30px auto;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    background: rgba(0, 0, 0, 0.5);
}

.key-slot.drag-over {
    border-color: #00ff88;
    background: rgba(0, 255, 136, 0.2);
}

.key-slot.completed {
    border-color: #00ff88;
    background: rgba(0, 255, 136, 0.3);
    box-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
}

.slot-text {
    color: #666;
    font-size: 0.9rem;
}

/* Level 2: Riddle */
.riddle-container {
    max-width: 600px;
    margin: 0 auto;
}

.riddle-screen {
    background: #111;
    border: 2px solid #00ff88;
    padding: 30px;
    margin-bottom: 30px;
    position: relative;
}

.riddle-screen::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, #00ff88, transparent);
    animation: scan-line 3s infinite;
}

@keyframes scan-line {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

.riddle-text {
    font-size: 1.2rem;
    line-height: 1.6;
    color: #00ff88;
}

.answer-input {
    display: flex;
    gap: 15px;
    margin-bottom: 20px;
}

.answer-input input {
    flex: 1;
    background: #1a1a1a;
    border: 2px solid #333;
    color: #00ff88;
    padding: 15px;
    font-family: inherit;
    font-size: 1rem;
    transition: border-color 0.3s ease;
}

.answer-input input:focus {
    outline: none;
    border-color: #00ff88;
    box-shadow: 0 0 10px rgba(0, 255, 136, 0.3);
}

.hint-container {
    margin-top: 20px;
}

.hint {
    color: #666;
    font-style: italic;
    font-size: 0.9rem;
}

/* Level 3: Keypad */
.keypad-container {
    max-width: 400px;
    margin: 0 auto;
}

.display-screen {
    background: #000;
    border: 2px solid #00ff88;
    padding: 20px;
    margin-bottom: 30px;
    text-align: center;
    font-size: 2rem;
    letter-spacing: 10px;
}

.keypad {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    margin-bottom: 30px;
}

.key-btn {
    background: #1a1a1a;
    border: 2px solid #333;
    color: #00ff88;
    padding: 20px;
    font-family: inherit;
    font-size: 1.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

.key-btn:hover {
    border-color: #00ff88;
    background: rgba(0, 255, 136, 0.1);
    transform: translateY(-2px);
}

.key-btn:active {
    transform: translateY(0);
    box-shadow: 0 0 15px rgba(0, 255, 136, 0.5);
}

.key-btn.clear {
    background: #4a1a1a;
    border-color: #ff4444;
    color: #ff4444;
}

.key-btn.enter {
    background: #1a4a1a;
    border-color: #44ff44;
    color: #44ff44;
}

.keypad-hint {
    text-align: center;
    color: #666;
    font-style: italic;
}

/* Success Screen */
.success-container {
    text-align: center;
}

.success-animation {
    margin-bottom: 50px;
    position: relative;
    width: 300px;
    height: 200px;
    margin-left: auto;
    margin-right: auto;
}

.door-frame {
    position: relative;
    width: 100%;
    height: 100%;
    background: #222;
    border: 3px solid #444;
}

.door {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    background: #333;
    border: 2px solid #555;
    transition: transform 2s ease;
}

.left-door {
    left: 0;
    transform-origin: left;
}

.right-door {
    right: 0;
    transform-origin: right;
}

.door.open.left-door {
    transform: perspective(500px) rotateY(-90deg);
}

.door.open.right-door {
    transform: perspective(500px) rotateY(90deg);
}

.exit-light {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, #ffff00 0%, transparent 70%);
    opacity: 0;
    transition: opacity 2s ease 1s;
}

.exit-light.active {
    opacity: 1;
    animation: light-pulse 2s infinite;
}

@keyframes light-pulse {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.2); }
}

.success-title {
    font-size: 3rem;
    color: #00ff88;
    text-shadow: 0 0 30px #00ff88;
    margin-bottom: 20px;
    animation: success-glow 2s infinite alternate;
}

@keyframes success-glow {
    from { text-shadow: 0 0 30px #00ff88; }
    to { text-shadow: 0 0 50px #00ff88, 0 0 70px #00ff88; }
}

.success-message {
    font-size: 1.3rem;
    margin-bottom: 30px;
    color: #ccc;
}

.stats {
    margin-bottom: 40px;
    font-size: 1.1rem;
    color: #00ff88;
}

/* Failure Screen */
.failure-container {
    text-align: center;
}

.failure-title {
    font-size: 4rem;
    color: #ff0080;
    margin-bottom: 30px;
}

.failure-message {
    font-size: 1.3rem;
    margin-bottom: 40px;
    color: #ccc;
}

/* Responsive Design */
@media (max-width: 768px) {
    #error-screen h1 {
        font-size: 4rem;
    }
    
    .error-message {
        font-size: 1.5rem;
    }
    
    .level-title {
        font-size: 2rem;
    }
    
    .hud {
        flex-direction: column;
        gap: 15px;
    }
    
    .level {
        padding: 150px 15px 20px;
    }
    
    .keypad {
        gap: 10px;
    }
    
    .key-btn {
        padding: 15px;
        font-size: 1.2rem;
    }
    
    .success-title {
        font-size: 2rem;
    }
}

/* Animations for level transitions */
.level-transition {
    animation: level-fade-in 1s ease;
}

@keyframes level-fade-in {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Drag and drop styles */
.dragging {
    opacity: 0.5;
    transform: scale(1.1);
    z-index: 100;
}
